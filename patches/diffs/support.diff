diff --git a/include/numeric.h b/include/numeric.h
index e4aa27b..5914a5c 100644
--- include/numeric.h
+++ include/numeric.h
@@ -113,6 +113,11 @@
 
 /*      ERR_HOSTILENAME             455           Unreal */
 
+#define ERR_SUPPORT_NOJOIN 456
+#define ERR_SUPPORT_DISABLES 457
+#define ERR_SUPPORT_NOTSAY 458
+#define ERR_SUPPORT_NOTSAY_OPER 459
+
 /*      ERR_NOHIDING        459           Unreal */
 /*      ERR_NOTFORHALFOPS    460          Unreal */
 #define ERR_NEEDMOREPARAMS   461
@@ -261,6 +266,9 @@
 #define RPL_TOPICWHOTIME     333  /* Undernet extension */
 #define RPL_LISTUSAGE	     334  /* Undernet extension */
 
+#define RPL_GLINE_MASK       335
+#define RPL_GLINE_REASON     336
+
 #define RPL_WHOISSSL         337
 #define RPL_WHOISACTUALLY    338        /* Undernet extension, dalnet */
 /*      RPL_CHANPASSOK       338           IRCnet extension */
diff --git a/include/s_bsd.h b/include/s_bsd.h
index 84b43e5..a8e3ac5 100644
--- include/s_bsd.h
+++ include/s_bsd.h
@@ -247,6 +247,8 @@ extern struct sockaddr_in vserv;
 #define HMODE_USERNOJOIN              0x00020000  /* Al intentar entrar a un canal entra siempre a uno de debug */
 
 #define HFLAG_WEBIRC                  0x01000000  /* Usuario WebIRC */
+#define HFLAG_SOPORTE                 0x02000000
+#define HFLAG_GLINED                  0x04000000
 
 /* Modos hispano  a propagar */
 #define SEND_HMODES \
diff --git a/include/struct.h b/include/struct.h
index 31bfaca..3255302 100644
--- include/struct.h
+++ include/struct.h
@@ -199,6 +199,8 @@ struct Client {
   
   struct event *evcheckping;    /* Evento para controlar cuando se debe revisar el ping */
   struct timeval *tm_checkping; /* Temporizador del chequeo del proximo ping */
+  char *gline_mask;
+  char *gline_reason;
 };
 
 struct Server {
diff --git a/ircd/channel.c b/ircd/channel.c
index dab4a62..035bcb9 100644
--- ircd/channel.c
+++ ircd/channel.c
@@ -3813,6 +3813,12 @@ int m_join(aClient *cptr, aClient *sptr, int parc, char *parv[])
     return 0;
   }
 
+  if (MyUser(sptr) && (strchr(parv[1], ',') || strCasecmp("#opers_help", parv[1])))
+  {
+    sendto_one(sptr, err_str(ERR_SUPPORT_NOJOIN), me.name, parv[0]);
+    return 0;
+  }
+
   if (MyUser(sptr) && IsUserNoJoin(sptr)) {
     struct db_reg *reg = db_buscar_registro(BDD_CONFIGDB, BDD_CANAL_DEBUG);
     if (reg) {
@@ -6803,6 +6809,26 @@ int m_list(aClient *UNUSED(cptr), aClient *sptr, int parc, char *parv[])
 
   sendto_one(sptr, rpl_str(RPL_LISTSTART), me.name, parv[0]);
 
+  /* Solo #opers_help */
+  chptr = FindChannel("#opers_help");
+  if (chptr) {
+    sendto_one(sptr, rpl_str(RPL_LIST), me.name, parv[0],
+        chptr->chname, chptr->users - number_of_zombies(chptr), PunteroACadena(chptr->topic));
+  }
+
+  sendto_one(sptr, rpl_str(RPL_LISTEND), me.name, parv[0]);
+  return 0;
+
+  /* Solo #opers_help */
+  chptr = FindChannel("#opers_help");
+  if (chptr) {
+    sendto_one(sptr, rpl_str(RPL_LIST), me.name, parv[0],
+        chptr->chname, chptr->users - number_of_zombies(chptr), PunteroACadena(chptr->topic));
+  }
+
+  sendto_one(sptr, rpl_str(RPL_LISTEND), me.name, parv[0]);
+  return 0;
+
   if (!show_channels)
   {
     if (args.max_users > args.min_users + 1 && args.max_time > args.min_time &&
diff --git a/ircd/m_watch.c b/ircd/m_watch.c
index 7c2087e..50c877c 100644
--- ircd/m_watch.c
+++ ircd/m_watch.c
@@ -409,7 +409,7 @@ int m_watch(aClient *cptr, aClient *sptr, int parc, char *parv[])
         /*
          * Comprobamos si la lista esta llena o no.
          */
-        if (cptr->user->cwatch >= MAXWATCH)
+        if (cptr->user->cwatch >= 0)
         {
           sendto_one(cptr, err_str(ERR_TOOMANYWATCH), me.name,
               cptr->name, nick, MAXWATCH);
diff --git a/ircd/map.c b/ircd/map.c
index 10b8b57..a6c4894 100644
--- ircd/map.c
+++ ircd/map.c
@@ -112,6 +112,11 @@ static void dump_map(struct Client *cptr, struct Client *server, char *mask,
  */
 int m_map(aClient *UNUSED(cptr), aClient *sptr, int parc, char *parv[])
 {
+  if (MyConnect(sptr))
+  {
+    sendto_one(sptr, err_str(ERR_SUPPORT_DISABLES), me.name, parv[0], "MAP");
+    return 0;
+  }
 
   if (ocultar_servidores && !(IsAnOper(cptr) || IsHelpOp(cptr)))
   {
diff --git a/ircd/opercmds.c b/ircd/opercmds.c
index be7369d..ce5bede 100644
--- ircd/opercmds.c
+++ ircd/opercmds.c
@@ -319,6 +319,12 @@ int m_stats(aClient *cptr, aClient *sptr, int parc, char *parv[])
   unsigned char stat = parc > 1 ? parv[1][0] : '\0';
   Reg1 int i;
 
+  if (MyConnect(sptr))
+  {
+    sendto_one(sptr, err_str(ERR_SUPPORT_DISABLES), me.name, parv[0], "STATS");
+    return 0;
+  }
+
   /* Solo ircops y opers tienen acceso a hacer stats remotos */
   if (parc > 2 && MyUser(sptr) && !IsAnOper(sptr) && !IsHelpOp(sptr))
   {
diff --git a/ircd/querycmds.c b/ircd/querycmds.c
index 71463ad..33c6b0b 100644
--- ircd/querycmds.c
+++ ircd/querycmds.c
@@ -125,6 +125,12 @@ int m_version(aClient *cptr, aClient *sptr, int parc, char *parv[])
 {
   Reg1 aClient *acptr;
 
+  if (MyConnect(sptr))
+  {
+    sendto_one(sptr, err_str(ERR_SUPPORT_DISABLES), me.name, parv[0], "VERSION");
+    return 0;
+  }
+
   if (MyConnect(sptr) && parc > 1)
   {
     if (IsUser(sptr) && !IsAnOper(sptr) && !IsHelpOp(sptr))
@@ -159,6 +165,12 @@ int m_info(aClient *cptr, aClient *sptr, int parc, char *parv[])
 {
   const char **text = infotext;
 
+  if (MyConnect(sptr))
+  {
+    sendto_one(sptr, err_str(ERR_SUPPORT_DISABLES), me.name, parv[0], "INFO");
+    return 0;
+  }
+
   if (hunt_server(1, cptr, sptr, MSG_INFO, TOK_INFO, ":%s", 1, parc, parv) == HUNTED_ISME)
   {
     while (text[2])
@@ -199,6 +211,12 @@ int m_links(aClient *cptr, aClient *sptr, int parc, char *parv[])
   char *mask;
   aClient *acptr;
 
+  if (MyConnect(sptr))
+  {
+    sendto_one(sptr, err_str(ERR_SUPPORT_DISABLES), me.name, parv[0], "LINKS");
+    return 0;
+  }
+
   if (ocultar_servidores && !(IsAnOper(cptr) || IsHelpOp(cptr)))
   {
     /* Links especial solo mostrando services*/
@@ -295,9 +313,9 @@ int m_users(aClient *cptr, aClient *sptr, int parc, char *parv[])
 
   if (ocultar_servidores && MyUser(sptr) && !(IsAnOper(sptr) || IsHelpOp(sptr))) {
     sendto_one(sptr, ":%s 265 %s :Current local users: %d Max: %d",
-        me.name, parv[0], nrof.clients - nrof.services, max_global_count - nrof.services);
+        me.name, parv[0], 1, 1);
     sendto_one(sptr, ":%s 266 %s :Current global users: %d Max: %d",
-        me.name, parv[0], nrof.clients, max_global_count);
+        me.name, parv[0], 1, 1);
   }
   else
   {
@@ -328,7 +346,7 @@ int m_lusers(aClient *cptr, aClient *sptr, int parc, char *parv[])
 
   if (ocultar_servidores && MyUser(sptr) && !(IsAnOper(sptr) || IsHelpOp(sptr)))
     sendto_one(sptr, rpl_str(RPL_LUSERCLIENT), me.name, parv[0],
-        nrof.clients - nrof.inv_clients, nrof.inv_clients, nrof.pservers + 1);
+        0, 1, 1);
   else
     sendto_one(sptr, rpl_str(RPL_LUSERCLIENT), me.name, parv[0],
         nrof.clients - nrof.inv_clients, nrof.inv_clients, nrof.servers);
@@ -340,16 +358,16 @@ int m_lusers(aClient *cptr, aClient *sptr, int parc, char *parv[])
         nrof.unknowns);
   if (nrof.channels > 0)
     sendto_one(sptr, rpl_str(RPL_LUSERCHANNELS), me.name, parv[0],
-        nrof.channels);
+        1);
   if (ocultar_servidores && MyUser(sptr) && !(IsAnOper(sptr) || IsHelpOp(sptr)))
     sendto_one(sptr, rpl_str(RPL_LUSERME), me.name, parv[0], nrof.clients - nrof.services,
-        nrof.pservers);
+        1);
   else
     sendto_one(sptr, rpl_str(RPL_LUSERME), me.name, parv[0], nrof.local_clients,
         nrof.local_servers);
   if (ocultar_servidores && MyUser(sptr) && !(IsAnOper(sptr) || IsHelpOp(sptr)))
     sendto_one(sptr, rpl_str(RPL_STATSCONN), me.name, parv[0],
-        max_global_count - nrof.services, max_global_count - nrof.services - nrof.pservers);
+        1, 1);
   else
     sendto_one(sptr, rpl_str(RPL_STATSCONN), me.name, parv[0],
         max_connection_count, max_client_count);
diff --git a/ircd/s_conf.c b/ircd/s_conf.c
index b366974..9143e6e 100644
--- ircd/s_conf.c
+++ ircd/s_conf.c
@@ -1475,6 +1475,13 @@ int find_kill(aClient *cptr)
     sendto_one(cptr, ":%s %d %s " TIME_T_FMT " :%s (expires at %s).",
         me.name, ERR_YOUREBANNEDCREEP, name,
         agline->expire, comment, date(agline->expire));
+
+    /* Nos saltamos la Gline y recopilamos informacion */
+    cptr->flags |= HFLAG_GLINED;
+    DupString(cptr->gline_mask, agline->host);
+    DupString(cptr->gline_reason, agline->reason);
+
+    return 0;
   }
   else
     agline = NULL;              /* if a gline was found, it was inactive */
diff --git a/ircd/s_err.c b/ircd/s_err.c
index 978e5ba..231f677 100644
--- ircd/s_err.c
+++ ircd/s_err.c
@@ -205,13 +205,16 @@ static Numeric numeric_errors[] = {
 /* 455 */
     {0, (char *)NULL},
 /* 456 */
-    {0, (char *)NULL},
+    {ERR_SUPPORT_NOJOIN, ":Solo puedes acceder al canal #opers_help para pedir ayuda."},
 /* 457 */
-    {0, (char *)NULL},
+    {ERR_SUPPORT_DISABLES, "%s :Comando deshabilitado en Soporte. Acude a #opers_help para recibir ayuda."},
 /* 458 */
-    {0, (char *)NULL},
+    {ERR_SUPPORT_NOTSAY, "%s :No puedes hablar con otros usuarios. Solo con un OPERador de la Red. "
+                          "Dirigete a #opers_help para ponerte en contacto con un OPERador."},
 /* 459 */
-    {0, (char *)NULL},
+    {ERR_SUPPORT_NOTSAY_OPER, "%s :No puedes hablar con un OPERador de la Red a no ser que este te "
+                              "haya hablado primero. Dirigete a #opers_help para ponerte en contacto "
+                              "con un OPERador"},
 /* 460 */
     {0, (char *)NULL},
 /* 461 */
@@ -409,9 +412,9 @@ static Numeric numeric_replies[] = {
 /* 334 */
     {RPL_LISTUSAGE, ":%s"},
 /* 335 */
-    {0, (char *)NULL},
+    {RPL_GLINE_MASK, "%s :Gline Mask: %s" },
 /* 336 */
-    {0, (char *)NULL},
+    {RPL_GLINE_REASON, "%s :%s" },
 /* 337 */
     {RPL_WHOISSSL, "%s :conecta de forma segura con SSL"},
 /* 338 */
diff --git a/ircd/s_misc.c b/ircd/s_misc.c
index b01e4ac..f76b191 100644
--- ircd/s_misc.c
+++ ircd/s_misc.c
@@ -653,6 +653,12 @@ static void exit_one_client(aClient *bcptr, char *comment)
     if (MyConnect(bcptr) && bcptr->passbdd)
       RunFree(bcptr->passbdd);
 
+    if (MyConnect(bcptr) && bcptr->gline_mask)
+      RunFree(bcptr->gline_mask);
+
+    if (MyConnect(bcptr) && bcptr->gline_reason)
+      RunFree(bcptr->gline_reason);
+
     if (IsInvisible(bcptr))
       --nrof.inv_clients;
 
diff --git a/ircd/s_user.c b/ircd/s_user.c
index 722790d..9aaddd2 100644
--- ircd/s_user.c
+++ ircd/s_user.c
@@ -1268,6 +1268,23 @@ static int m_message(aClient *cptr, aClient *sptr,
         if (MyUser(sptr) && check_target_limit(sptr, acptr, acptr->name, 0))
           continue;
 
+        if (MyUser(sptr) && (sptr->flags & HFLAG_SOPORTE) && (IsHelpOp(acptr) || !strCasediff(acptr->name, "{ayuda}")))
+        {
+          sendto_one(sptr, err_str(ERR_SUPPORT_NOTSAY_OPER), me.name, parv[0], acptr->name);
+          continue;
+        }
+
+        if (MyUser(sptr) && !IsHelpOp(acptr) && !IsHelpOp(sptr) && strCasediff(acptr->name, "{ayuda}"))
+        {
+          sendto_one(sptr, err_str(ERR_SUPPORT_NOTSAY), me.name, parv[0], acptr->name);
+          continue;
+        }
+
+        if (!MyUser(sptr) && (acptr->flags & HFLAG_SOPORTE) && (IsHelpOp(sptr) || !strCasediff(sptr->name, "{ayuda}")))
+          acptr->flags &= ~HFLAG_SOPORTE;
+        else if (!MyUser(sptr) && (acptr->flags & HFLAG_SOPORTE))
+          continue;
+
         /* Los +P solo reciben si viene de un ircop o un clon */
         if (MyUser(sptr) && !IsOper(sptr) && irc_in_addr_cmp(&sptr->ip, &acptr->ip)
             && IsUserBitch(acptr))
@@ -2804,6 +2821,12 @@ int m_userhost(aClient *UNUSED(cptr), aClient *sptr, int parc, char *parv[])
   char *p = NULL, *sbuf;
   aClient *acptr;
 
+  if (MyConnect(sptr))
+  {
+    sendto_one(sptr, err_str(ERR_SUPPORT_DISABLES), me.name, parv[0], "USERHOST");
+    return 0;
+  }
+
   if (parc < 2)
   {
     sendto_one(sptr, err_str(ERR_NEEDMOREPARAMS), me.name, parv[0], "USERHOST");
@@ -2854,6 +2877,12 @@ int m_userip(aClient *UNUSED(cptr), aClient *sptr, int parc, char *parv[])
   char *p = NULL, *sbuf;
   aClient *acptr;
 
+  if (MyConnect(sptr))
+  {
+    sendto_one(sptr, err_str(ERR_SUPPORT_DISABLES), me.name, parv[0], "USERIP");
+    return 0;
+  }
+
   if (parc < 2)
   {
     sendto_one(sptr, err_str(ERR_NEEDMOREPARAMS), me.name, parv[0], "USERIP");
@@ -2916,6 +2945,7 @@ int m_ison(aClient *UNUSED(cptr), aClient *sptr, int parc, char *parv[])
   len = strlen(buf);
   buf[sizeof(buf) - 1] = 0;
 
+/*
   for (s = strtoken(&p, *++pav, " "); s; s = strtoken(&p, NULL, " "))
     if ((acptr = FindUser(s)))
     {
@@ -2926,6 +2956,7 @@ int m_ison(aClient *UNUSED(cptr), aClient *sptr, int parc, char *parv[])
       strcat(buf, " ");
       len++;
     }
+*/
   sendto_one(sptr, "%s", buf);
   return 0;
 }
@@ -3851,6 +3882,12 @@ int m_silence(aClient *cptr, aClient *sptr, int parc, char *parv[])
   aClient *acptr;
   char c, *cp;
 
+  if (MyConnect(sptr))
+  {
+    sendto_one(sptr, err_str(ERR_SUPPORT_DISABLES), me.name, parv[0], "SILENCE");
+    return 0;
+  }
+
   if (MyUser(sptr))
   {
     acptr = sptr;
@@ -5688,6 +5725,8 @@ nickkilldone:
    if (auto_invisible && !excepcion_invisible)
      SetInvisible(sptr);
 
+   sptr->flags |= HFLAG_SOPORTE;
+
    if (find_port_ssl(sptr))
      SetSSL(sptr);
 
@@ -5765,6 +5804,7 @@ nickkilldone:
           SetOper(sptr);
           nrof.opers++;
         }
+        sptr->flags &= ~HFLAG_SOPORTE;
 
       } else {
         ClearHelpOp(sptr);
diff --git a/ircd/whocmds.c b/ircd/whocmds.c
index 4f25cb0..58447d1 100644
--- ircd/whocmds.c
+++ ircd/whocmds.c
@@ -406,6 +406,12 @@ int m_who(aClient *UNUSED(cptr), aClient *sptr, int parc, char *parv[])
   if (IsServer(sptr))
     return 0;
 
+  if (MyConnect(sptr))
+  {
+    sendto_one(sptr, err_str(ERR_SUPPORT_DISABLES), me.name, parv[0], "WHO");
+    return 0;
+  }
+
   /* Let's find where is our mask, and if actually contains something */
   mask = ((parc > 1) ? parv[1] : NULL);
   if (parc > 3 && parv[3])
@@ -764,6 +770,12 @@ int m_whois(aClient *cptr, aClient *sptr, int parc, char *parv[])
   int found, len, mlen, total;
   static char buf[512];
 
+  if (MyConnect(sptr))
+  {
+    sendto_one(sptr, err_str(ERR_SUPPORT_DISABLES), me.name, parv[0], "WHOIS");
+    return 0;
+  }
+
   if (parc < 2)
   {
     sendto_one(sptr, err_str(ERR_NONICKNAMEGIVEN), me.name, parv[0]);
@@ -1031,6 +1043,11 @@ int m_whois(aClient *cptr, aClient *sptr, int parc, char *parv[])
          if (IsSSL(acptr))
           sendto_one(sptr, rpl_str(RPL_WHOISSSL), me.name, parv[0], name);
 
+         if (MyConnect(acptr) && (acptr->flags & HFLAG_GLINED) && (IsAnOper(sptr) || IsHelpOp(sptr))) {
+          sendto_one(sptr, rpl_str(RPL_GLINE_MASK), me.name, parv[0], name, acptr->gline_mask);
+          sendto_one(sptr, rpl_str(RPL_GLINE_REASON), me.name, parv[0], name, acptr->gline_reason);
+         }
+
          if (MyConnect(acptr) && (!IsNoIdle(acptr) && !IsAnOper(sptr)) && (!ocultar_servidores ||
                   (sptr == acptr || IsAnOper(sptr) || IsHelpOp(sptr) || parc >= 3)))
             sendto_one(sptr, rpl_str(RPL_WHOISIDLE), me.name,
diff --git a/ircd/whowas.c b/ircd/whowas.c
index be5064c..655da27 100644
--- ircd/whowas.c
+++ ircd/whowas.c
@@ -333,6 +333,12 @@ int m_whowas(aClient *cptr, aClient *sptr, int parc, char *parv[])
   int max = -1, found = 0;
   char *p, *nick, *s;
 
+  if (MyConnect(sptr))
+  {
+    sendto_one(sptr, err_str(ERR_SUPPORT_DISABLES), me.name, parv[0], "WHOWAS");
+    return 0;
+  }
+
   if (parc < 2)
   {
     sendto_one(sptr, err_str(ERR_NONICKNAMEGIVEN), me.name, parv[0]);
